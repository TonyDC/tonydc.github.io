{"version":3,"sources":["viewer/camera/controls/OrbitControls.ts","viewer/viewer.ts","ui/component/Viewer.tsx","ui/component/CloudSelector.tsx","ui/component/ViewerPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","CHANGE_EVENT","type","START_EVENT","END_EVENT","OrbitControls","_EventDispatcher","object","domElement","domWindow","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","window","enabled","target","enableZoom","zoomSpeed","minDistance","maxDistance","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableKeys","keys","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","scale","target0","position0","zoom0","state","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","undefined","document","Vector3","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ORBIT","MOUSE","ZOOM","MIDDLE","clone","position","zoom","Quaternion","setFromUnitVectors","up","inverse","Spherical","Vector2","addEventListener","onContextMenu","bind","assertThisInitialized","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onKeyDown","initialize","update","inherits","createClass","key","value","event","MouseEvent","preventDefault","button","set","clientX","clientY","onMouseMove","onMouseUp","dispatchEvent","subVectors","element","body","rotateLeft","x","clientWidth","rotateUp","y","clientHeight","copy","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","WheelEvent","stopPropagation","deltaY","KeyboardEvent","keyCode","TouchEvent","touches","length","pageX","pageY","dx","dy","distance","sqrt","sub","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","max","min","makeSafe","radius","add","setFromSpherical","lookAt","distanceToSquared","dot","quaternion","objectMatrix","setFromMatrixColumn","multiplyScalar","deltaX","checkPerspectiveCamera","targetDistance","tan","fov","panLeft","matrix","panUp","checkOrthographicCamera","right","left","top","bottom","console","warn","dollyScale","updateProjectionMatrix","pow","angle","get","camera","isPerspectiveCamera","isOrthographicCamera","EventDispatcher","Viewer","targetEl","renderer","WebGLRenderer","scene","Scene","controls","potree","Potree","pointClouds","prevTime","reqAnimationFrameHandle","PerspectiveCamera","NaN","z","AxesHelper","appendChild","resize","requestAnimationFrame","loop","removeChild","cancelAnimationFrame","fileName","baseUrl","loadPointCloud","url","concat","then","pco","translateX","translateY","translateZ","boundingBox","rotateX","push","dt","updatePointClouds","clear","render","time","_this$targetEl$getBou","getBoundingClientRect","width","height","aspect","setSize","_default","props","viewerRef","potreeViewer","React","createRef","current","path","loadCloud","prevProps","prevPath","clean","load","catch","err","error","react_default","a","createElement","className","ref","Component","Selector","_ref","label","options","callback","_useState","useState","_useState2","slicedToArray","setState","onChange","_ref2","map","_ref3","index","name","paths","ViewerPage","component_CloudSelector","component_Viewer_default","App","component_ViewerPage","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4f2708b.chunk.js","sourcesContent":["\nimport { Matrix4, EventDispatcher, MOUSE, Spherical, Vector3, Vector2, Quaternion, Camera, PerspectiveCamera, OrthographicCamera } from 'three';\n\nconst STATE = {\n    NONE: - 1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5\n};\n\nconst CHANGE_EVENT = { type: 'change' };\nconst START_EVENT = { type: 'start' };\nconst END_EVENT = { type: 'end' };\nconst EPS = 0.000001;\n\n/**\n* @author qiao / https://github.com/qiao\n* @author mrdoob / http://mrdoob.com\n* @author alteredq / http://alteredqualia.com/\n* @author WestLangley / http://github.com/WestLangley\n* @author erich666 / http://erichaines.com\n* @author nicolaspanel / http://github.com/nicolaspanel\n*\n* This set of controls performs orbiting, dollying (zooming), and panning.\n* Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n*    Orbit - left mouse / touch: one finger move\n*    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n*    Pan - right mouse, or arrow keys / touch: three finger swipe\n*/\nexport class OrbitControls extends EventDispatcher {\n    object: Camera;\n    domElement: HTMLElement | HTMLDocument;\n    window: Window;\n\n    // API\n    enabled: boolean;\n    target: Vector3;\n\n    enableZoom: boolean;\n    zoomSpeed: number;\n    minDistance: number;\n    maxDistance: number;\n    enableRotate: boolean;\n    rotateSpeed: number;\n    enablePan: boolean;\n    keyPanSpeed: number;\n    autoRotate: boolean;\n    autoRotateSpeed: number;\n    minZoom: number;\n    maxZoom: number;\n    minPolarAngle: number;\n    maxPolarAngle: number;\n    minAzimuthAngle: number;\n    maxAzimuthAngle: number;\n    enableKeys: boolean;\n    keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; };\n    mouseButtons: { ORBIT: MOUSE; ZOOM: MOUSE; PAN: MOUSE; };\n    enableDamping: boolean;\n    dampingFactor: number;\n\n    private spherical: Spherical;\n    private sphericalDelta: Spherical;\n    private scale: number;\n    private target0: Vector3;\n    private position0: Vector3;\n    private zoom0: any;\n    private state: number;\n    private panOffset: Vector3;\n    private zoomChanged: boolean;\n\n    private rotateStart: Vector2;\n    private rotateEnd: Vector2;\n    private rotateDelta: Vector2\n\n    private panStart: Vector2;\n    private panEnd: Vector2;\n    private panDelta: Vector2;\n\n    private dollyStart: Vector2;\n    private dollyEnd: Vector2;\n    private dollyDelta: Vector2;\n\n    private updateLastPosition: Vector3;\n    private updateOffset: Vector3;\n    private updateQuat: Quaternion;\n\n    private updateLastQuaternion: Quaternion;\n    private updateQuatInverse: Quaternion;\n\n    private panLeftV: Vector3;\n    private panUpV: Vector3;\n    private panInternalOffset: Vector3;\n\n    constructor(object: Camera, domElement?: HTMLElement, domWindow?: Window) {\n        super();\n        this.object = object;\n\n        this.domElement = (domElement !== undefined) ? domElement : document;\n        this.window = (domWindow !== undefined) ? domWindow : window;\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new Vector3();\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = - Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = { ORBIT: MOUSE.LEFT, ZOOM: MOUSE.MIDDLE, PAN: MOUSE.RIGHT };\n\n        // for reset\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = (this.object as any).zoom;\n\n        // for update speedup\n        this.updateOffset = new Vector3();\n        // so camera.up is the orbit axis\n        this.updateQuat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n        this.updateQuatInverse = this.updateQuat.clone().inverse();\n        this.updateLastPosition = new Vector3();\n        this.updateLastQuaternion = new Quaternion();\n\n        this.state = STATE.NONE;\n        this.scale = 1;\n\n        // current position in spherical coordinates\n        this.spherical = new Spherical();\n        this.sphericalDelta = new Spherical();\n\n        this.panOffset = new Vector3();\n        this.zoomChanged = false;\n\n        this.rotateStart = new Vector2();\n        this.rotateEnd = new Vector2();\n        this.rotateDelta = new Vector2();\n\n        this.panStart = new Vector2();\n        this.panEnd = new Vector2();\n        this.panDelta = new Vector2();\n\n        this.dollyStart = new Vector2();\n        this.dollyEnd = new Vector2();\n        this.dollyDelta = new Vector2();\n\n        this.panLeftV = new Vector3();\n        this.panUpV = new Vector3();\n        this.panInternalOffset = new Vector3();\n\n        // event handlers - FSM: listen for events and reset state\n        this.domElement.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\n\n        this.domElement.addEventListener('mousedown', this.onMouseDown.bind(this), false);\n        this.domElement.addEventListener('wheel', this.onMouseWheel.bind(this), false);\n\n        this.domElement.addEventListener('touchstart', this.onTouchStart.bind(this), false);\n        this.domElement.addEventListener('touchend', this.onTouchEnd.bind(this), false);\n        this.domElement.addEventListener('touchmove', this.onTouchMove.bind(this), false);\n\n        this.window.addEventListener('keydown', this.onKeyDown.bind(this), false);\n\n        this.initialize();\n\n        // force an update at start\n        this.update();\n    }\n\n    private initialize() {\n        this.maxPolarAngle = Math.PI;\n        this.minPolarAngle = 0;\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // this.enableZoom = true; // Set to false to disable zooming\n        // this.zoomSpeed = 1.0;\n\n        this.enableZoom = true;\n        this.enableRotate = true;\n        this.enablePan = true; // Set to false to disable panning (ie vertical and horizontal translations)\n\n        this.enableDamping = false; // Set to false to disable damping (ie inertia)\n        this.dampingFactor = 0.25;\n    }\n\n    onMouseDown(event: Event) {\n        if (!(event instanceof MouseEvent)) {\n            return;\n        }\n\n        if (this.enabled === false) return;\n\n        event.preventDefault();\n\n        if (event.button === this.mouseButtons.ORBIT) {\n            if (this.enableRotate === false) return;\n            this.rotateStart.set(event.clientX, event.clientY);\n            this.state = STATE.ROTATE;\n        } else if (event.button === this.mouseButtons.ZOOM) {\n            if (this.enableZoom === false) return;\n            this.dollyStart.set(event.clientX, event.clientY);\n            this.state = STATE.DOLLY;\n        } else if (event.button === this.mouseButtons.PAN) {\n            if (this.enablePan === false) return;\n            this.panStart.set(event.clientX, event.clientY);\n            this.state = STATE.PAN;\n        }\n\n        if (this.state !== STATE.NONE) {\n            document.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n            document.addEventListener('mouseup', this.onMouseUp.bind(this), false);\n            this.dispatchEvent(START_EVENT);\n        }\n    }\n\n    onMouseMove(event: Event) {\n        if (!(event instanceof MouseEvent)) {\n            return;\n        }\n\n        if (this.enabled === false) return;\n\n        event.preventDefault();\n\n        if (this.state === STATE.ROTATE) {\n            if (this.enableRotate === false) return;\n            this.rotateEnd.set(event.clientX, event.clientY);\n            this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart);\n            const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n            // rotating across whole screen goes 360 degrees around\n            this.rotateLeft(2 * Math.PI * this.rotateDelta.x / (element as any).clientWidth * this.rotateSpeed);\n            // rotating up and down along whole screen attempts to go 360, but limited to 180\n            this.rotateUp(2 * Math.PI * this.rotateDelta.y / (element as any).clientHeight * this.rotateSpeed);\n            this.rotateStart.copy(this.rotateEnd);\n\n            this.update();\n        } else if (this.state === STATE.DOLLY) {\n\n            if (this.enableZoom === false) return;\n\n            this.dollyEnd.set(event.clientX, event.clientY);\n            this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart);\n\n            if (this.dollyDelta.y > 0) {\n                this.dollyIn(this.getZoomScale());\n            } else if (this.dollyDelta.y < 0) {\n                this.dollyOut(this.getZoomScale());\n            }\n\n            this.dollyStart.copy(this.dollyEnd);\n            this.update();\n        } else if (this.state === STATE.PAN) {\n\n            if (this.enablePan === false) return;\n\n            this.panEnd.set(event.clientX, event.clientY);\n            this.panDelta.subVectors(this.panEnd, this.panStart);\n            this.pan(this.panDelta.x, this.panDelta.y);\n            this.panStart.copy(this.panEnd);\n            this.update();\n        }\n    }\n\n    onMouseUp(event: Event) {\n        if (!(event instanceof MouseEvent)) {\n            return;\n        }\n\n        if (this.enabled === false) return;\n        document.removeEventListener('mousemove', this.onMouseMove, false);\n        document.removeEventListener('mouseup', this.onMouseUp, false);\n\n        this.dispatchEvent(END_EVENT);\n        this.state = STATE.NONE;\n    }\n\n    onMouseWheel(event: Event) {\n        if (!(event instanceof WheelEvent)) {\n            return;\n        }\n\n        if (this.enabled === false || this.enableZoom === false || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.deltaY < 0) {\n            this.dollyOut(this.getZoomScale());\n        } else if (event.deltaY > 0) {\n            this.dollyIn(this.getZoomScale());\n        }\n\n        this.update();\n\n        this.dispatchEvent(START_EVENT); // not sure why these are here...\n        this.dispatchEvent(END_EVENT);\n    }\n\n    onKeyDown(event: Event) {\n        if (!(event instanceof KeyboardEvent)) {\n            return;\n        }\n\n        if (this.enabled === false || this.enableKeys === false || this.enablePan === false) return;\n\n        switch (event.keyCode) {\n            case this.keys.UP:\n                this.pan(0, this.keyPanSpeed);\n                this.update();\n                break;\n            case this.keys.BOTTOM:\n                this.pan(0, - this.keyPanSpeed);\n                this.update();\n                break;\n            case this.keys.LEFT:\n                this.pan(this.keyPanSpeed, 0);\n                this.update();\n                break;\n            case this.keys.RIGHT:\n                this.pan(- this.keyPanSpeed, 0);\n                this.update();\n                break;\n        }\n    }\n\n    onTouchStart(event: Event) {\n        if (!(event instanceof TouchEvent)) {\n            return;\n        }\n\n        if (this.enabled === false) return;\n\n        switch (event.touches.length) {\n            // one-fingered touch: rotate\n            case 1:\n                if (this.enableRotate === false) return;\n\n                this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                this.state = STATE.TOUCH_ROTATE;\n                break;\n            // two-fingered touch: dolly\n            case 2:\n                if (this.enableZoom === false) return;\n\n                var dx = event.touches[0].pageX - event.touches[1].pageX;\n                var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n                var distance = Math.sqrt(dx * dx + dy * dy);\n                this.dollyStart.set(0, distance);\n                this.state = STATE.TOUCH_DOLLY;\n                break;\n            // three-fingered touch: pan\n            case 3:\n                if (this.enablePan === false) return;\n\n                this.panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                this.state = STATE.TOUCH_PAN;\n                break;\n            default:\n                this.state = STATE.NONE;\n\n        }\n\n        if (this.state !== STATE.NONE) {\n            this.dispatchEvent(START_EVENT);\n        }\n    }\n\n    onTouchMove(event: Event) {\n        if (!(event instanceof TouchEvent)) {\n            return;\n        }\n\n        if (this.enabled === false) return;\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (event.touches.length) {\n            // one-fingered touch: rotate\n            case 1:\n                if (this.enableRotate === false) return;\n                if (this.state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n                this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart);\n\n                var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / (element as any).clientWidth * this.rotateSpeed);\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / (element as any).clientHeight * this.rotateSpeed);\n\n                this.rotateStart.copy(this.rotateEnd);\n\n                this.update();\n                break;\n            // two-fingered touch: dolly\n            case 2:\n                if (this.enableZoom === false) return;\n                if (this.state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n                //console.log( 'handleTouchMoveDolly' );\n                const dx = event.touches[0].pageX - event.touches[1].pageX;\n                const dy = event.touches[0].pageY - event.touches[1].pageY;\n\n                const distance = Math.sqrt(dx * dx + dy * dy);\n\n                this.dollyEnd.set(0, distance);\n\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart);\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyOut(this.getZoomScale());\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyIn(this.getZoomScale());\n                }\n\n                this.dollyStart.copy(this.dollyEnd);\n                this.update();\n                break;\n            // three-fingered touch: pan\n            case 3:\n                if (this.enablePan === false) return;\n                if (this.state !== STATE.TOUCH_PAN) return; // is this needed?...\n                this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                this.panDelta.subVectors(this.panEnd, this.panStart);\n                this.pan(this.panDelta.x, this.panDelta.y);\n                this.panStart.copy(this.panEnd);\n                this.update();\n                break;\n            default:\n                this.state = STATE.NONE;\n\n        }\n    }\n\n    onTouchEnd(event: Event) {\n        if (!(event instanceof TouchEvent)) {\n            return;\n        }\n\n        if (this.enabled === false) return;\n        this.dispatchEvent(END_EVENT);\n        this.state = STATE.NONE;\n    }\n\n    onContextMenu(event: Event) {\n        event.preventDefault();\n    }\n\n\n    update() {\n        const position = this.object.position;\n        this.updateOffset.copy(position).sub(this.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat);\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset);\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle());\n        }\n\n        (this.spherical as any).theta += (this.sphericalDelta as any).theta;\n        (this.spherical as any).phi += (this.sphericalDelta as any).phi;\n\n        // restrict theta to be between desired limits\n        (this.spherical as (any) as any).theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, (this.spherical as any).theta));\n\n        // restrict phi to be between desired limits\n        (this.spherical as any).phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, (this.spherical as any).phi));\n\n        this.spherical.makeSafe();\n\n        (this.spherical as any).radius *= this.scale;\n\n        // restrict radius to be between desired limits\n        (this.spherical as any).radius = Math.max(this.minDistance, Math.min(this.maxDistance, (this.spherical as any).radius));\n\n        // move target to panned location\n        this.target.add(this.panOffset);\n\n        this.updateOffset.setFromSpherical(this.spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse);\n\n        position.copy(this.target).add(this.updateOffset);\n\n        this.object.lookAt(this.target);\n\n        if (this.enableDamping === true) {\n\n            (this.sphericalDelta as any).theta *= (1 - this.dampingFactor);\n            (this.sphericalDelta as any).phi *= (1 - this.dampingFactor);\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0);\n\n        }\n\n        this.scale = 1;\n        this.panOffset.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT);\n            this.updateLastPosition.copy(this.object.position);\n            this.updateLastQuaternion.copy(this.object.quaternion);\n            this.zoomChanged = false;\n            return true;\n        }\n        return false;\n    }\n\n    panLeft(distance: number, objectMatrix: Matrix4) {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(- distance);\n        this.panOffset.add(this.panLeftV);\n    }\n\n    panUp(distance: number, objectMatrix: Matrix4) {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance);\n        this.panOffset.add(this.panUpV);\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    pan(deltaX: number, deltaY: number) {\n        const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n        if (OrbitControls.checkPerspectiveCamera(this.object)) {\n            // perspective\n            const position = this.object.position;\n            this.panInternalOffset.copy(position).sub(this.target);\n            var targetDistance = this.panInternalOffset.length();\n\n            // half of the fov is center to top of screen\n            targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0);\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this.panLeft(2 * deltaX * targetDistance / (element as any).clientHeight, this.object.matrix);\n            this.panUp(2 * deltaY * targetDistance / (element as any).clientHeight, this.object.matrix);\n        } else if (OrbitControls.checkOrthographicCamera(this.object)) {\n            // orthographic\n            this.panLeft(deltaX * (this.object.right - this.object.left) / this.object.zoom / (element as any).clientWidth, this.object.matrix);\n            this.panUp(deltaY * (this.object.top - this.object.bottom) / this.object.zoom / (element as any).clientHeight, this.object.matrix);\n        } else {\n            // camera neither orthographic nor perspective\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            this.enablePan = false;\n        }\n    }\n\n    dollyIn(dollyScale: number) {\n        if (OrbitControls.checkPerspectiveCamera(this.object)) {\n            this.scale /= dollyScale;\n        } else if (OrbitControls.checkOrthographicCamera(this.object)) {\n            this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n            this.object.updateProjectionMatrix();\n            this.zoomChanged = true;\n        } else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            this.enableZoom = false;\n        }\n    }\n\n    dollyOut(dollyScale: number) {\n        if (OrbitControls.checkPerspectiveCamera(this.object)) {\n            this.scale *= dollyScale;\n        } else if (OrbitControls.checkOrthographicCamera(this.object)) {\n            this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n            this.object.updateProjectionMatrix();\n            this.zoomChanged = true;\n        } else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            this.enableZoom = false;\n        }\n    }\n\n    getAutoRotationAngle() {\n        return 2 * Math.PI / 3600 * this.autoRotateSpeed;\n    }\n\n    getZoomScale() {\n        return Math.pow(0.95, this.zoomSpeed);\n    }\n\n    rotateLeft(angle: number) {\n        this.sphericalDelta.theta -= angle;\n    }\n\n    rotateUp(angle: number) {\n        this.sphericalDelta.phi -= angle;\n    }\n\n    getPolarAngle(): number {\n        return this.spherical.phi;\n    }\n\n    getAzimuthalAngle(): number {\n        return this.spherical.theta;\n    }\n\n    dispose(): void {\n        this.domElement.removeEventListener('contextmenu', this.onContextMenu, false);\n        this.domElement.removeEventListener('mousedown', this.onMouseDown, false);\n        this.domElement.removeEventListener('wheel', this.onMouseWheel, false);\n\n        this.domElement.removeEventListener('touchstart', this.onTouchStart, false);\n        this.domElement.removeEventListener('touchend', this.onTouchEnd, false);\n        this.domElement.removeEventListener('touchmove', this.onTouchMove, false);\n\n        document.removeEventListener('mousemove', this.onMouseMove, false);\n        document.removeEventListener('mouseup', this.onMouseUp, false);\n\n        this.window.removeEventListener('keydown', this.onKeyDown, false);\n        //this.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    reset(): void {\n        this.target.copy(this.target0);\n        this.object.position.copy(this.position0);\n        (this.object as any).zoom = this.zoom0;\n\n        (this.object as any).updateProjectionMatrix();\n        this.dispatchEvent(CHANGE_EVENT);\n\n        this.update();\n\n        this.state = STATE.NONE;\n    }\n\n    saveState(): void {\n        this.target0.copy(this.target);\n        this.position0.copy(this.object.position);\n        // Check whether the camera has zoom property\n        if (OrbitControls.checkOrthographicCamera(this.object) || OrbitControls.checkPerspectiveCamera(this.object)) {\n            this.zoom0 = this.object.zoom;\n        }\n    }\n\n    // backward compatibility\n    get center(): Vector3 {\n        console.warn('OrbitControls: .center has been renamed to .target');\n        return this.target;\n    }\n    get noZoom(): boolean {\n        console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n        return !this.enableZoom;\n    }\n\n    set noZoom(value: boolean) {\n        console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n        this.enableZoom = !value;\n    }\n\n    /**\n     * TS typeguard. Checks whether the provided camera is PerspectiveCamera. \n     * If the check passes (returns true) the passed camera will have the type THREE.PerspectiveCamera in the if branch where the check was performed.\n     * @param camera Object to be checked.\n     */\n    private static checkPerspectiveCamera(camera: Camera): camera is PerspectiveCamera {\n        return (camera as PerspectiveCamera).isPerspectiveCamera;\n    }\n    /**\n     * TS typeguard. Checks whether the provided camera is OrthographicCamera. \n     * If the check passes (returns true) the passed camera will have the type THREE.OrthographicCamera in the if branch where the check was performed.\n     * @param camera Object to be checked.\n     */\n    private static checkOrthographicCamera(camera: Camera): camera is OrthographicCamera {\n        return (camera as OrthographicCamera).isOrthographicCamera;\n    }\n}\n\n","import { PerspectiveCamera, Scene, WebGLRenderer, AxesHelper } from \"three\";\nimport { PointCloudOctree, Potree } from \"@pix4d/three-potree-loader\";\nimport { OrbitControls } from './camera/controls/OrbitControls';\n\nexport class Viewer {\n    /**\n     * The element where we will insert our canvas.\n     */\n    private targetEl: HTMLElement | undefined;\n    /**\n     * The ThreeJS renderer used to render the scene.\n     */\n    private renderer = new WebGLRenderer();\n    /**\n     * Our scene which will contain the point cloud.\n     */\n    private scene = new Scene();\n    /**\n     * The camera used to view the scene.\n     */\n    private camera: PerspectiveCamera;\n    /**\n     * The camera controller, so that the user can interact with the camera\n     */\n    private controls: OrbitControls;\n    /**\n     * Controls which update the position of the camera.\n     */\n    // private cameraControls = new CameraControls(this.camera);\n    /**\n     * Out potree instance which handles updating point clouds, keeps track of loaded nodes, etc.\n     */\n    private potree = new Potree();\n    /**\n     * Array of point clouds which are in the scene and need to be updated.\n     */\n    private pointClouds: PointCloudOctree[] = [];\n    /**\n     * The time (milliseconds) when `loop()` was last called.\n     */\n    private prevTime: number | undefined;\n    /**\n     * requestAnimationFrame handle we can use to cancel the viewer loop.\n     */\n    private reqAnimationFrameHandle: number | undefined;\n\n    constructor() {\n        this.camera = new PerspectiveCamera(45, NaN, 0.1, 1000);\n        this.camera.position.x = 5;\n        this.camera.position.y = 5;\n        this.camera.position.z = 5;\n\n        // The controler must be set after all the camera properties have been set\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    }\n\n    /**\n     * When invoked, an axis object is added to the scene.\n     * \n     * Primarily, for debuging purposes.\n     */\n    private showAxesHelper() {\n        this.scene.add(new AxesHelper(1));\n    }\n\n    /**\n     * Initializes the viewer into the specified element.\n     *\n     * @param targetEl\n     *    The element into which we should add the canvas where we will render the scene.\n     */\n    initialize(targetEl: HTMLElement): void {\n        if (this.targetEl || !targetEl) {\n            return;\n        }\n\n        this.targetEl = targetEl;\n        targetEl.appendChild(this.renderer.domElement);\n\n        this.resize();\n        window.addEventListener(\"resize\", this.resize.bind(this));\n\n        // this.showAxesHelper();\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    /**\n     * Performs any cleanup necessary to destroy/remove the viewer from the page.\n     */\n    destroy(): void {\n        if (!this.targetEl) {\n            return;\n        }\n\n        this.targetEl.removeChild(this.renderer.domElement);\n        this.targetEl = undefined;\n        window.removeEventListener(\"resize\", this.resize.bind(this));\n\n        // TODO: clean point clouds or other objects added to the scene.\n\n        if (this.reqAnimationFrameHandle !== undefined) {\n            cancelAnimationFrame(this.reqAnimationFrameHandle);\n        }\n    }\n\n    clean() {\n        this.scene = new Scene();\n        this.pointClouds = [];\n\n        // this.showAxesHelper();\n    }\n\n    /**\n     * Loads a point cloud into the viewer and returns it.\n     *\n     * @param fileName\n     *    The name of the point cloud which is to be loaded.\n     * @param baseUrl\n     *    The url where the point cloud is located and from where we should load the octree nodes.\n     */\n    load(fileName: string, baseUrl: string): Promise<void> {\n        return this.potree\n            .loadPointCloud(\n                // The file name of the point cloud which is to be loaded.\n                fileName,\n                // Given the relative URL of a file, should return a full URL.\n                url => `${baseUrl}${url}`\n            )\n            .then((pco: PointCloudOctree) => {\n                // Have the object starting at the origin\n                pco.translateX(-pco.position.x);\n                pco.translateY(-pco.position.y);\n                pco.translateZ(-pco.position.z);\n                pco.translateZ(pco.boundingBox.max.z);\n\n                pco.rotateX(-Math.PI / 2);\n\n                // Add the point cloud to the scene and to our list of\n                // point clouds. We will pass this list of point clouds to\n                // potree to tell it to update them.\n                this.scene.add(pco);\n                this.pointClouds.push(pco);\n\n                // The point cloud octree already comes with a material which\n                // can be customized directly. Here we just set the size of the\n                // points.\n                // pco.material.size = 1.0;\n            });\n    }\n\n    /**\n     * Updates the point clouds, cameras or any other objects which are in the scene.\n     *\n     * @param dt\n     *    The time, in milliseconds, since the last update.\n     */\n    update(dt: number): void {\n        // Alternatively, you could use Three's OrbitControls or any other\n        // camera control system.\n        // this.cameraControls.update(dt);\n\n        // This is where most of the potree magic happens. It updates the\n        // visiblily of the octree nodes based on the camera frustum and it\n        // triggers any loads/unloads which are necessary to keep the number\n        // of visible points in check.\n        this.potree.updatePointClouds(this.pointClouds, this.camera, this.renderer);\n    }\n\n    /**\n     * Renders the scene into the canvas.\n     */\n    render(): void {\n        this.renderer.clear();\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    /**\n     * The main loop of the viewer, called at 60FPS, if possible.\n     */\n    loop(time: number): void {\n        this.reqAnimationFrameHandle = requestAnimationFrame(this.loop.bind(this));\n\n        const prevTime = this.prevTime;\n        this.prevTime = time;\n        if (prevTime === undefined) {\n            return;\n        }\n\n        this.update(time - prevTime);\n        this.render();\n    };\n\n    /**\n     * Triggered anytime the window gets resized.\n     */\n    resize(): void {\n        if (!this.targetEl) {\n            return;\n        }\n\n        const { width, height } = this.targetEl.getBoundingClientRect();\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(width, height);\n    };\n}\n","import React, { RefObject } from 'react';\nimport { Viewer } from \"../../viewer/viewer\";\n\nimport '../style/Viewer.css';\n\n\ninterface ViewerProps {\n    readonly path: string;\n}\n\nexport default class extends React.Component<ViewerProps> {\n\n    private viewerRef: RefObject<any>;\n    private potreeViewer: Viewer;\n\n    constructor(props: ViewerProps) {\n        super(props);\n\n        this.state = {}\n\n        this.viewerRef = React.createRef();\n        this.potreeViewer = new Viewer();\n    }\n\n    componentDidMount() {\n        this.potreeViewer.initialize(this.viewerRef.current);\n\n        const { path } = this.props;\n        this.loadCloud(path);\n    }\n\n    componentDidUpdate(prevProps: ViewerProps) {\n        const { path: prevPath } = prevProps;\n        const { path } = this.props;\n\n        if (prevPath !== path) {\n            this.potreeViewer.clean();\n            this.loadCloud(path);\n        }\n    }\n\n    loadCloud(path: string) {\n        this.potreeViewer\n            .load(\"cloud.js\", path)\n            .catch(err => console.error(err));\n    }\n\n    render() {\n        return <div className=\"viewer-wrapper\" ref={this.viewerRef} />;\n    }\n}\n\n","import React, { useState } from 'react';\n\nimport '../style/CloudSelector.css';\n\ninterface SelectorInterface {\n    readonly label: string;\n    readonly options: { name: string, path: string }[];\n    readonly callback: (selectedOption: string) => void\n}\n\nconst Selector: React.FC<SelectorInterface> = ({ label, options, callback }) => {\n    const [value, setState] = useState(options[0].path || '');\n\n    return (\n        <label className=\"cloud-selector\">\n            {label}\n            <select value={value} onChange={({ target }) => { setState(target.value); callback(target.value) }}>\n                {options.map(({ name, path }, index) => <option key={index} value={path}>{name}</option>)}\n            </select>\n        </label>\n    );\n}\n\nexport default Selector;","import React, { useState } from 'react';\nimport Viewer from './Viewer';\nimport CloudSelector from './CloudSelector';\n\nimport '../style/ViewerPage.css';\n\ninterface CloudOption {\n    readonly name: string;\n    readonly path: string;\n}\n\nconst paths: CloudOption[] = [\n    {\n        name: 'Lion',\n        path: 'https://cdn.rawgit.com/potree/potree/develop/pointclouds/lion_takanawa/'\n    },\n    {\n        name: 'Volume total',\n        path: 'https://cdn.rawgit.com/potree/potree/develop/pointclouds/vol_total/'\n    }\n    /*,\n    {\n        name: 'Ruin',\n        path: 'http://5.9.65.151/mschuetz/potree/resources/pointclouds/archpro/heidentor/'\n    },\n    {\n        name: 'Cooler',\n        path: 'http://5.9.65.151/mschuetz/potree/resources/pointclouds/weiss/chiller/'\n    },\n    {\n        name: 'Building',\n        path: 'http://5.9.65.151/mschuetz/potree/resources/pointclouds/surface_and_edge/land_building/'\n    }\n    */\n]\n\n\nconst ViewerPage: React.FC = () => {\n    const [url, setState] = useState(paths[0].path);\n\n    return (\n        <div className=\"ViewerPage\">\n            <CloudSelector label=\"Clouds:\" options={paths} callback={url => setState(url)} />\n            <Viewer path={url}></Viewer>\n        </div>\n    );\n}\n\nexport default ViewerPage;","import React from 'react';\nimport './App.css';\n\nimport ViewerPage from './ui/component/ViewerPage';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ViewerPage />\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}